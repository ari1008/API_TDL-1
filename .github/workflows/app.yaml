name: PA_TDL_Test

on: [push]


jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.10.8"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          echo "hello"
          if [ -f ./prod_dockerfile/web/requirements.txt ];  then echo "hello2"; pip install -r ./prod_dockerfile/web/requirements.txt; fi

          ls -al prod_dockerfile/web/
          echo "hello"
      #- name: Lint with flake8
        #run: |
        #  # stop the build if there are Python syntax errors or undefined names
         # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
         # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
  docker:
      needs: [build]
      runs-on: ubuntu-22.04
      
      steps:
        - name: Checkout
          uses: actions/checkout@v3.1.0

        - name: Login to Docker Hub
          uses: docker/login-action@v2.1.0
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            logout: true

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4.1.1
          with:
            images: ari1008/web-aristide
        
        
        - name: Build and push Docker image
          uses: docker/build-push-action@v3
          with:
            context:  .
            push: true
            tags: ari1008/web-aristide
  deploy:
    if: ${{github.event_name == 'push'}}
    needs: [docker]
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Helm tool installer
        uses: Azure/setup-helm@v3
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
            
      - name: Create kubeconfig file
        run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yml

      - name: Update Helm
        run: helm upgrade --kubeconfig ./kubeconfig.yml my-chart ./my-chart/
